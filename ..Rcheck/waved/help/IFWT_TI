IFWT_TI                package:waved                R Documentation

_I_n_v_e_r_s_e _F_o_r_w_a_r_d _W_a_v_e_l_e_t _T_r_a_n_s_f_o_r_m (_t_r_a_n_s_l_a_t_i_o_n _i_n_v_a_r_i_a_n_t).

_D_e_s_c_r_i_p_t_i_o_n:

     Compute the Inverse Forward Wavelet Transform of a signal $f$ for
     the Meyer wavelet (translation invariant).

_U_s_a_g_e:

     IFWT_TI(f_fft, psyJ_fft, lev, thr, nn, SOFT = FALSE)

_A_r_g_u_m_e_n_t_s:

   f_fft: vector of the  Fourier coefficient of $f$

psyJ_fft: vector of the  Fourier coefficient of the Meyer wavelet.

     lev: resolution level 

     thr: threshold (has lentgh=1)

      nn: sample size 

    SOFT: if SOFT=TRUE, uses the soft thresholding policy  as opposed
          to the        hard (SOFT=FALSE, the default).  

_V_a_l_u_e:

     Inverse Forward Wavelet Transform of a signal $f$, after
     thresholding.

_A_u_t_h_o_r(_s):

     Marc Raimondo

_R_e_f_e_r_e_n_c_e_s:

     Raimondo, M. and Stewart, M. (2007), "The WaveD Transform in R",
     Journal of Statistical Software.

_S_e_e _A_l_s_o:

     'WaveD', ~~~

_E_x_a_m_p_l_e_s:

     psyJ_fft=wavelet_YM(4,10,3);
     f_fft=fft(sin(2*pi*seq(0,1,le=1024)));
     IFWT_TI(f_fft, psyJ_fft, 4, 0, 1024)

