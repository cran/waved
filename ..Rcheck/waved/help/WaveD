WaveD                 package:waved                 R Documentation

_W_a_v_e_D

_D_e_s_c_r_i_p_t_i_o_n:

     Performs statistical wavelet deconvolution using Meyer wavelet.

_U_s_a_g_e:

     WaveD(yobs, g = c(1, rep(0, (length(yobs) - 1))), MC = FALSE, SOFT = FALSE, F = find.j1(g, scale(yobs))[2], L = 3, deg = 3, eta = sqrt(6), thr = maxithresh(yobs, g, eta = eta), label = "WaveD")

_A_r_g_u_m_e_n_t_s:

    yobs: Sample of $f*g$ + (Gaussian noise), a vector of dyadic length
           (i.e. $2^(J-1)$ where J is the largest resolution level). 
          Here f is the target function, g is the convolution kernel.

       g: Sample of g or g + (Gaussian noise), same length as yobs. The
          default is the Dirac mass at 0.

      MC: Option to only return the (fast) translation-invariant WaveD
          estimate (MC=TRUE) as opposed to the full WaveD output
          (MC=FALSE, the default),  as described below. MC=TRUE
          recommended for Monte Carlo simulation.

    SOFT: if SOFT=TRUE, uses the soft thresholding policy as opposed to
          the hard (SOFT=FALSE, the default).

       F: Finest resolution level; the default is the data-driven
          choice j1 (see Value below).

       L: Lowest resolution level; the default is 3.

     deg: The degree of the Meyer wavelet, either 1, 2, or 3 (the
          default).

     eta: Tuning parameter of the maxiset threshold; default is
          $\sqrt(6)$.

     thr: A vector of length $F-L+1$, giving thresholds at each
          resolution levels L,L+1,...,F; default is maxiset threshold.

   label: Auxiliary plotting parameter; do not change this.

_V_a_l_u_e:

     In the case that MC=TRUE, WaveD returns a vector consisting of the
     translation-invariant WaveD estimate. In the case that MC=FALSE
     (the default), WaveD returns a list with components 

   waved: translation invariant WaveD transform; in the case MC=TRUE
          this is all that is returned.

ordinary: ordinary WaveD transform

  FWaveD: Forward WaveD Transform; see 'FWaveD'.

       w: alternate name for FWaveD

   w.thr: thresholded version of w

  IWaveD: Inverse WaveD Transform

      iw: alternate name for IWaveD

       s: estimate of the noise standard deviation

      j1: estimate of optimal resolution level (for maxiset threshold).

       F: Fine resolution level used (may be different to j1).

       M: estimate of optimal Fourier frequency (for maxiset
          threshold).

     thr: vector of thresholds used (default is maxiset threshold).

 percent: percentage of thresholding per resolution level

   noise: noise proxy, wavelet coefficients of the raw data at the
          largest resolution level, used for estimating noise features.

      ps: P-value of the Shapiro-Wilk test for normality applied to the
          noise proxy.

residuals: wavelet coefficients that have been removed before fine
          level F.

_A_u_t_h_o_r(_s):

     Marc Raimondo and Michael Stewart

_R_e_f_e_r_e_n_c_e_s:

     Cavalier, L. and Raimondo, M.  (2007), `Wavelet deconvolution with
     noisy eigen-values', {\em IEEE Trans. Signal Process}, Vol. 55(6),
     In the press.

     Donoho, D. and Raimondo, M.  (2004), `Translation invariant
     deconvolution in a periodic setting', {\em The International
     Journal of Wavelets, Multiresolution and Information Processing}
     {\bf 14}(1),~415-423.

     Johnstone, I., Kerkyacharian, G., Picard, D. and Raimondo, M. 
     (2004),  `Wavelet deconvolution in a periodic setting', {\em
     Journal of the Royal Statistical Society, Series B} {\bf
     66}(3),~547-573.  with discussion pp.627-652.

     Raimondo, M. and Stewart, M. (2007), `The WaveD Transform in R',
     Journal of Statistical Software.

_S_e_e _A_l_s_o:

     'FWaveD'

_E_x_a_m_p_l_e_s:

     library(waved)
     data=waved.example(TRUE,FALSE)
     doppler.wvd=WaveD(data$doppler.noisy,data$g)
     summary(doppler.wvd)

